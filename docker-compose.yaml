services:
  app-dev:
    build:
      context: .
      dockerfile: Dockerfile
      target: dev
    profiles: ["dev"]
    container_name: hono-dev
    ports:
      - "3000:3000"
    volumes:
      - .:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - PORT=3000
    networks:
      - app-network
    restart: unless-stopped

  app-prod:
    build:
      context: .
      dockerfile: Dockerfile
      target: prod
    env_file:
      - .env
    profiles: ["prod"]
    environment:
      - NODE_ENV=production
      - PORT=3000
    networks:
      - app-network
    restart: unless-stopped
    deploy:
      replicas: 3
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/healthcheck"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  caddy:
      image: caddy:2-alpine
      container_name: caddy_lb
      profiles: ["prod"]
      ports:
        - "80:80"
        - "8000:8000"
        - "8080:8080"
        - "443:443"
      volumes:
        - ./Caddyfile:/etc/caddy/Caddyfile
        - caddy_data:/data
        - caddy_config:/config
        - ./logs:/var/log/caddy
      networks:
        - app-network
      depends_on:
        - app-prod
      restart: unless-stopped

volumes:
  caddy_data:
  caddy_config:

networks:
  app-network:
    driver: bridge
